
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;

/*
* To change this template, choose Tools | Templates
* and open the template in the editor.
*/

/**
 *
 * @author  Neharika - 764253
 */
public class FrameSearch extends javax.swing.JFrame {
    
    /**
     * Creates new form FrameSearch
     */
    public FrameSearch() {
        initComponents();
        
        //popup appears if user tries to close window
        addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                int selectedOption = JOptionPane.showConfirmDialog(null,
                        "Are you sure you want to close the window?",
                        "EXIT",
                        JOptionPane.YES_NO_OPTION);
                //if user clicks yes, program closes
                if (selectedOption == JOptionPane.YES_OPTION) {
                    e.getWindow().dispose();
                }
            }
        });
        
        labelSearchErrorMessage.setVisible (false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelSearchedHourlyWage = new javax.swing.JPanel();
        labelSearchFirstName = new javax.swing.JLabel();
        labelSearchAnnualSalary = new javax.swing.JLabel();
        labelSearchLastName = new javax.swing.JLabel();
        labelSearchWorkLocation = new javax.swing.JLabel();
        labelSearchSex = new javax.swing.JLabel();
        labelSearchEmpNumber = new javax.swing.JLabel();
        labelSearchDeductionRate = new javax.swing.JLabel();
        labelSearchHoursPerWeek = new javax.swing.JLabel();
        labelSearchedFirstName = new javax.swing.JLabel();
        labelSearchedLastName = new javax.swing.JLabel();
        labelSearchedEmpNum = new javax.swing.JLabel();
        labelSearchedWorkLocation = new javax.swing.JLabel();
        labelSearchedSex = new javax.swing.JLabel();
        labelSearchedDeductionRate = new javax.swing.JLabel();
        labelSearchedHoursPerWeek = new javax.swing.JLabel();
        labelSearchHourlyWage = new javax.swing.JLabel();
        labelSearchWeeksPerYear = new javax.swing.JLabel();
        labelSearchAnnualGrossIncome = new javax.swing.JLabel();
        labelSearchedSalary = new javax.swing.JLabel();
        labelSearchedTheHourlyWage = new javax.swing.JLabel();
        labelSearchedWeeksPerYear = new javax.swing.JLabel();
        labelSearchedAnnualGrossIncome = new javax.swing.JLabel();
        labelSearchedEmpType = new javax.swing.JLabel();
        labelSearchEmpType = new javax.swing.JLabel();
        labelSearchTitle = new javax.swing.JLabel();
        textFieldToSearchEmpNum = new javax.swing.JTextField();
        buttonSearchForTheEmpNumber = new javax.swing.JButton();
        buttonSearchExit = new javax.swing.JButton();
        labelSearchErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        labelSearchedHourlyWage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchFirstName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchFirstName.setText("First Name :");

        labelSearchAnnualSalary.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchAnnualSalary.setText("Annual Salary :");

        labelSearchLastName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchLastName.setText("Last Name :");

        labelSearchWorkLocation.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchWorkLocation.setText("Work Location :");

        labelSearchSex.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchSex.setText("Sex :");

        labelSearchEmpNumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchEmpNumber.setText("Employee Number :");

        labelSearchDeductionRate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchDeductionRate.setText("Deductions Rate :");

        labelSearchHoursPerWeek.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchHoursPerWeek.setText("Hours Per Week :");

        labelSearchedFirstName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedLastName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedEmpNum.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedWorkLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedSex.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedDeductionRate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedHoursPerWeek.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchHourlyWage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchHourlyWage.setText("Hourly Wage :");

        labelSearchWeeksPerYear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchWeeksPerYear.setText("Weeks Per Year :");

        labelSearchAnnualGrossIncome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchAnnualGrossIncome.setText("Annual Gross Income :");

        labelSearchedSalary.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedTheHourlyWage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedWeeksPerYear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedAnnualGrossIncome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchedEmpType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSearchEmpType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchEmpType.setText("Employee Type :");

        javax.swing.GroupLayout labelSearchedHourlyWageLayout = new javax.swing.GroupLayout(labelSearchedHourlyWage);
        labelSearchedHourlyWage.setLayout(labelSearchedHourlyWageLayout);
        labelSearchedHourlyWageLayout.setHorizontalGroup(
            labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSearchWorkLocation, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchSex, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchDeductionRate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchEmpType, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSearchedDeductionRate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedSex, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedWorkLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedEmpType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                        .addComponent(labelSearchEmpNumber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelSearchedEmpNum, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSearchHoursPerWeek)
                            .addComponent(labelSearchHourlyWage, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchWeeksPerYear, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchAnnualSalary, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSearchedHoursPerWeek, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedWeeksPerYear, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedTheHourlyWage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                        .addComponent(labelSearchAnnualGrossIncome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSearchedAnnualGrossIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        labelSearchedHourlyWageLayout.setVerticalGroup(
            labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelSearchedFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSearchFirstName)
                    .addComponent(labelSearchAnnualSalary)
                    .addComponent(labelSearchedSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSearchedLastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchHoursPerWeek, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchLastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchedHoursPerWeek, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelSearchedEmpNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelSearchEmpNumber)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, labelSearchedHourlyWageLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelSearchedWeeksPerYear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(labelSearchWeeksPerYear))
                .addGap(10, 10, 10)
                .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelSearchedEmpType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSearchEmpType)
                    .addComponent(labelSearchHourlyWage)
                    .addComponent(labelSearchedTheHourlyWage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(labelSearchedHourlyWageLayout.createSequentialGroup()
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchedWorkLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchWorkLocation))
                        .addGap(10, 10, 10)
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSearchedSex, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchSex))
                        .addGap(10, 10, 10)
                        .addGroup(labelSearchedHourlyWageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSearchedDeductionRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchDeductionRate, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(labelSearchAnnualGrossIncome)
                    .addComponent(labelSearchedAnnualGrossIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelSearchTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSearchTitle.setText("PLEASE ENTER THE EMPLOYEE NUMBER...");
        labelSearchTitle.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        textFieldToSearchEmpNum.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        buttonSearchForTheEmpNumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonSearchForTheEmpNumber.setText("SEARCH");
        buttonSearchForTheEmpNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchForTheEmpNumberActionPerformed(evt);
            }
        });

        buttonSearchExit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        buttonSearchExit.setForeground(new java.awt.Color(255, 0, 0));
        buttonSearchExit.setText("EXIT");
        buttonSearchExit.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        buttonSearchExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchExitActionPerformed(evt);
            }
        });

        labelSearchErrorMessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSearchErrorMessage.setForeground(new java.awt.Color(255, 0, 51));
        labelSearchErrorMessage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(labelSearchTitle)
                                .addGap(28, 28, 28)
                                .addComponent(textFieldToSearchEmpNum, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonSearchForTheEmpNumber))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelSearchedHourlyWage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonSearchExit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelSearchErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSearchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldToSearchEmpNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSearchForTheEmpNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSearchErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSearchedHourlyWage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSearchExit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void buttonSearchForTheEmpNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchForTheEmpNumberActionPerformed
        
        // ouHT points to the hash table.
        MyHashTable ourHT = FrameMain.getEmployeeHashTable();
        
        //tests if searched input can be converted to integer
        if (FrameMain.isInteger(this.textFieldToSearchEmpNum.getText())== true){
            
            int empToSearch = Integer.parseInt(this.textFieldToSearchEmpNum.getText());
            
            // Look for this employee number in the hash table.
            EmployeeInfo theEmp;
            int targetBucket = ourHT.calcBucket(empToSearch);
            int noEmp = 0; //1 if employee is found, 0 if employee is not found
            
            for (int i = 0; i < (ourHT.getBuckets())[targetBucket].size(); i++) {
                theEmp = (ourHT.getBuckets())[targetBucket].get(i);
                if (empToSearch == theEmp.employeeNumber) {
                    // We've found the employee.  So now populate the info in the window.
                    noEmp = 1;//to store that the employee is found
                    // general attributes
                    labelSearchedFirstName.setText(theEmp.getFirstName());
                    labelSearchedLastName.setText(theEmp.getLastName());
                    labelSearchedEmpNum.setText(Integer.toString(theEmp.getEmployeeNumber()));
                    {labelSearchedSex.setText(Integer.toString(theEmp.getSex()));
                    //sets label to corresponding gender, blank if there is no information available
                    switch (theEmp.getSex()){
                        case 0 : labelSearchedSex.setText ("Male");
                        break ;
                        case 1 : labelSearchedSex.setText ("Female");
                        break ;
                        case 2 : labelSearchedSex.setText ("Other");
                        break ;
                        default : labelSearchedSex.setText ("");
                        break ;
                        
                    }
                    }

                    {labelSearchedWorkLocation.setText(Integer.toString(theEmp.getWorkLocation()));
                    //sets label to corresponding work location, blank if there's no information available
                    switch (theEmp.getWorkLocation()){
                        case 0 : labelSearchedWorkLocation.setText ("Mississauga");
                        break ;
                        case 1 : labelSearchedWorkLocation.setText ("Ottawa");
                        break ;
                        case 2 : labelSearchedWorkLocation.setText ("Chicago");
                        break ;
                        default : labelSearchedWorkLocation.setText ("");
                        break ;
                        
                    }
                    }
                    
                    labelSearchedDeductionRate.setText(Double.toString(theEmp.getDeductionsRate()));
                    
                    // checks if the employee is full time
                    if (theEmp instanceof FullTimeEmployee) {
                        // if the employee is part time the following code runs
                        FullTimeEmployee theFTE = (FullTimeEmployee) theEmp;
                        labelSearchedSalary.setText(Double.toString(theFTE.annualSalary));
                        labelSearchedAnnualGrossIncome.setText(Double.toString(theFTE.calcAnnualGrossIncome()));
                        labelSearchedEmpType.setText ("Full Time");
                        
                        // make part time labels invisible
                        labelSearchedTheHourlyWage.setVisible(false);
                        labelSearchHourlyWage.setVisible(false);
                        labelSearchedHoursPerWeek.setVisible(false);
                        labelSearchHoursPerWeek.setVisible(false);
                        labelSearchedWeeksPerYear.setVisible(false);
                        labelSearchWeeksPerYear.setVisible(false);
                        labelSearchErrorMessage.setVisible (false);
                        
                    }
                    // checks if the employee is part time
                    else if (theEmp instanceof PartTimeEmployee) {
                        // if the employee is part time the following code runs
                        PartTimeEmployee thePTE = (PartTimeEmployee) theEmp;
                        labelSearchedTheHourlyWage.setText(Double.toString(thePTE.hourlyWage));
                        labelSearchedHoursPerWeek.setText(Double.toString(thePTE.hoursPerWeek));
                        labelSearchedWeeksPerYear.setText(Double.toString(thePTE.weeksPerYear));
                        labelSearchedAnnualGrossIncome.setText(Double.toString(thePTE.calcAnnualGrossIncome()));
                        labelSearchedEmpType.setText ("Part Time");
                        
                        // make full time labels invisible
                        labelSearchedSalary.setVisible(false);
                        labelSearchAnnualSalary.setVisible(false);
                        labelSearchErrorMessage.setVisible (false);
                    }
                    
                }
                
            }
            if (noEmp == 0){ //employee is not in hash table
                // This employee is not in the hash table!!!
                labelSearchErrorMessage.setText("ERROR: THIS EMPLOYEE DOES NOT EXIST IN THE DATABASE");
                labelSearchErrorMessage.setVisible (true);
            }
        }
        else {//if input cant be converted to integer
            labelSearchErrorMessage.setText("ERROR: PLEASE PUT AN INTEGER SEARCH VALUE");
            labelSearchErrorMessage.setVisible (true);
        }
        
    }//GEN-LAST:event_buttonSearchForTheEmpNumberActionPerformed
    
    private void buttonSearchExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchExitActionPerformed
        //closes search frame and bring user back to display frame
        dispose();
        new FrameDisplay().setVisible(true);
    }//GEN-LAST:event_buttonSearchExitActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameSearch().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSearchExit;
    private javax.swing.JButton buttonSearchForTheEmpNumber;
    private javax.swing.JLabel labelSearchAnnualGrossIncome;
    private javax.swing.JLabel labelSearchAnnualSalary;
    private javax.swing.JLabel labelSearchDeductionRate;
    private javax.swing.JLabel labelSearchEmpNumber;
    private javax.swing.JLabel labelSearchEmpType;
    private javax.swing.JLabel labelSearchErrorMessage;
    private javax.swing.JLabel labelSearchFirstName;
    private javax.swing.JLabel labelSearchHourlyWage;
    private javax.swing.JLabel labelSearchHoursPerWeek;
    private javax.swing.JLabel labelSearchLastName;
    private javax.swing.JLabel labelSearchSex;
    private javax.swing.JLabel labelSearchTitle;
    private javax.swing.JLabel labelSearchWeeksPerYear;
    private javax.swing.JLabel labelSearchWorkLocation;
    private javax.swing.JLabel labelSearchedAnnualGrossIncome;
    private javax.swing.JLabel labelSearchedDeductionRate;
    private javax.swing.JLabel labelSearchedEmpNum;
    private javax.swing.JLabel labelSearchedEmpType;
    private javax.swing.JLabel labelSearchedFirstName;
    private javax.swing.JPanel labelSearchedHourlyWage;
    private javax.swing.JLabel labelSearchedHoursPerWeek;
    private javax.swing.JLabel labelSearchedLastName;
    private javax.swing.JLabel labelSearchedSalary;
    private javax.swing.JLabel labelSearchedSex;
    private javax.swing.JLabel labelSearchedTheHourlyWage;
    private javax.swing.JLabel labelSearchedWeeksPerYear;
    private javax.swing.JLabel labelSearchedWorkLocation;
    private javax.swing.JTextField textFieldToSearchEmpNum;
    // End of variables declaration//GEN-END:variables
}
